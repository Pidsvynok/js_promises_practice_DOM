{"mappings":"ACEA,IAAM,EAAc,SAAS,IAAI,CAE3B,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,6BACV,GAEA,WAAW,WACT,EAAO,AAAI,MAAM,8BACnB,EAAG,IACL,GAEM,EAAgB,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA5C,EACE,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAQ,8BACV,GAEA,SAAS,gBAAgB,CAAC,cAAe,SAAC,CAA1C,EACE,EAAE,cAAc,GAChB,EAAQ,8BACV,EACF,GAEM,EAAe,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA3C,EACE,IAAI,EAAa,KACb,EAAY,KAEhB,SAAS,gBAAgB,CAAC,QAAS,WACjC,EAAY,CAAA,EAER,GAAc,GAChB,EAAQ,6BAEZ,GAEA,SAAS,gBAAgB,CAAC,cAAe,WACvC,EAAa,CAAA,EAET,AAAc,GAChB,EAAQ,6BAEZ,EACF,GAEA,SAAS,EAAgB,CAAO,EAC9B,EACG,IAAI,CAAC,SAAC,CADT,EAEI,IAAM,EAAe,SAAS,aAAa,CAAC,MAE5C,CAAA,EAAa,OAAO,CAAC,EAAE,CAAG,eAC1B,EAAa,SAAS,CAAG,UACzB,EAAa,WAAW,CAAG,EAC3B,EAAY,MAAM,CAAC,EACrB,GACC,KAAK,CAAC,SAAC,CADR,EAEE,IAAM,EAAe,SAAS,aAAa,CAAC,MAE5C,CAAA,EAAa,OAAO,CAAC,EAAE,CAAG,eAC1B,EAAa,SAAS,CAAG,QACzB,EAAa,WAAW,CAAG,EAAM,OAAO,CACxC,EAAY,MAAM,CAAC,EACrB,EACJ,CAEA,EAAgB,GAChB,EAAgB,GAChB,EAAgB","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar bodyElement = document.body;\nvar firstPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"First promise was resolved\");\n    });\n    setTimeout(function() {\n        reject(new Error(\"First promise was rejected\"));\n    }, 3000);\n});\nvar secondPromise = new Promise(function(resolve, reject) {\n    document.addEventListener(\"click\", function() {\n        resolve(\"Second promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function(e) {\n        e.preventDefault();\n        resolve(\"Second promise was resolved\");\n    });\n});\nvar thirdPromise = new Promise(function(resolve, reject) {\n    var rightClick = null;\n    var leftClick = null;\n    document.addEventListener(\"click\", function() {\n        leftClick = true;\n        if (rightClick && leftClick) resolve(\"Third promise was resolved\");\n    });\n    document.addEventListener(\"contextmenu\", function() {\n        rightClick = true;\n        if (rightClick && leftClick) resolve(\"Third promise was resolved\");\n    });\n});\nfunction addNotification(promise) {\n    promise.then(function(message) {\n        var notification = document.createElement(\"div\");\n        notification.dataset.qa = \"notification\";\n        notification.className = \"success\";\n        notification.textContent = message;\n        bodyElement.append(notification);\n    }).catch(function(error) {\n        var notification = document.createElement(\"div\");\n        notification.dataset.qa = \"notification\";\n        notification.className = \"error\";\n        notification.textContent = error.message;\n        bodyElement.append(notification);\n    });\n}\naddNotification(firstPromise);\naddNotification(secondPromise);\naddNotification(thirdPromise);\n\n//# sourceMappingURL=index.d5191007.js.map\n","'use strict';\n\nconst bodyElement = document.body;\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve('Second promise was resolved');\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  let rightClick = null;\n  let leftClick = null;\n\n  document.addEventListener('click', () => {\n    leftClick = true;\n\n    if (rightClick && leftClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n\n  document.addEventListener('contextmenu', () => {\n    rightClick = true;\n\n    if (rightClick && leftClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nfunction addNotification(promise) {\n  promise\n    .then((message) => {\n      const notification = document.createElement('div');\n\n      notification.dataset.qa = 'notification';\n      notification.className = 'success';\n      notification.textContent = message;\n      bodyElement.append(notification);\n    })\n    .catch((error) => {\n      const notification = document.createElement('div');\n\n      notification.dataset.qa = 'notification';\n      notification.className = 'error';\n      notification.textContent = error.message;\n      bodyElement.append(notification);\n    });\n}\n\naddNotification(firstPromise);\naddNotification(secondPromise);\naddNotification(thirdPromise);\n"],"names":["bodyElement","document","body","firstPromise","Promise","resolve","reject","addEventListener","setTimeout","Error","secondPromise","e","preventDefault","thirdPromise","rightClick","leftClick","addNotification","promise","then","message","notification","createElement","dataset","qa","className","textContent","append","catch","error"],"version":3,"file":"index.d5191007.js.map"}